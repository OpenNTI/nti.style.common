// @mixin blur-effect() {
// 	//filter: blur(add = 0, direction = 0, strength = 10);//IE
// 	//filter: url(#blur-effect);//moz
// 	filter: blur(8px);
// }

// We use this to do clear floats
@mixin clearfix {
	&:before, &:after {
		clear: both;
		content: " ";
		display: table;
		margin: 0;
		overflow: hidden;
		padding: 0;
		position: relative;
	}
}


@mixin vertical-align {
	position: relative;
	top: 50%;
	transform: translate3d(0,-50%, 0);
}


@mixin viewports($rule, $factor) { // used by viewportWidth and viewportHeight, below.
	//iOS 7 fix:
	// iPad with portrait orientation.
	@media all and (device-width: 768px) and (device-height: 1024px) and (orientation:portrait){
		#{$rule}: #{768*$factor}px;
	}

	// iPad with landscape orientation.
	@media all and (device-width: 768px) and (device-height: 1024px) and (orientation:landscape){
		#{$rule}: #{1024*$factor}px;
	}

	// iPhone 1-4 with portrait orientation.
	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:portrait){
		#{$rule}: #{320*$factor}px;
	}

	// iPhone 1-4 with landscape orientation.
	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:landscape){
		#{$rule}: #{480*$factor}px;
	}

	// iPhone5 with portrait orientation.
	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:portrait){
		#{$rule}: #{320*$factor}px;
	}

	// iPhone5 with landscape orientation.
	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:landscape){
		#{$rule}: #{568*$factor}px;
	}
	//iPhone 6's never had iOS7 on them.
}


@mixin viewportWidth($rule, $value) {
	$w: $value;
	#{$rule}: #{$w}vw;
	$factor: $w/100;
	@include viewports($rule, $factor)
}


@mixin viewportHeight($rule, $value) {
	$h: $value;
	#{$rule}: #{$h}vh;
	$factor: $h/100;
	@include viewports($rule, $factor)
}


//TODO: this seems like a component style
@mixin metadata() {
	background: rgba(0,0,0,0.2);
	border-radius:2px;
	color:white;
}


//TODO: this seems like a component style
@mixin count-badge() {
	@include metadata();
	padding:.2em .5em;
	margin-left:.25em;
	display: inline-block;
	font-family: $body-font-family;
	font-weight: bold;
	margin-right:-.25em;
}


@mixin retina-asset($path, $type: 'png', $xCount: 2) {
	//$path will be something like ./assets/some-asset
	//$type will be something like png

	//This mixin will generate the 2x and 3x asset rules.

	background-image: url($path + '.' + $type);

	@media (-webkit-min-device-pixel-ratio: 1.01), (min-resolution: 1.01dppx) {
		background-image: url($path + '@2x.' + $type);
	}

	@if ($xCount > 2) {
		@media (-webkit-min-device-pixel-ratio: 2.2), (min-resolution: 2.2dppx) {
			background-image: url($path + '@3x.' + $type);
		}
	}
}


@mixin limit-lines ($lines: 2, $line-height: 1.15) {
	max-height: $lines * ($line-height * 1em);
	overflow: hidden;
	text-overflow: ellipsis;

	//Magic non-standard CSS:
	display: -webkit-box;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: $lines;
}


@mixin covered-modal () {
	body > .modal[aria-hidden="true"] & {
		@content
	}
}

@mixin opacity-on-covered-modal () {
	transition: opacity 0.5s;
	opacity: 1;

	@include covered-modal () {
		opacity: 0.05;
	}
}
